<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Category Management</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="/frontend/public/css/adminDashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" crossorigin="anonymous" />
</head>
<body>
  <div class="container-fluid">
    <div class="row">
      <%- include('../partials/sidebar') %>

      <div class="col-md-10 p-0">
        <div class="bg-white d-flex justify-content-between align-items-center py-3 px-4 border-bottom">
          <h5 class="mb-0">Edit Categories</h5>
          <div class="d-flex align-items-center gap-2">
            <span><%= name %></span>
            <i class="fa-solid fa-user"></i>
          </div>
        </div>

        <div class="p-4">
          <p class="text-muted">Manage your product categories</p>

          <div class="row g-4">
            <% const sections = [
              { title: 'Category', field: 'category' },
              { title: 'Shoe Type', field: 'type' },
              { title: 'Size', field: 'size' },
              { title: 'Color', field: 'color' }
            ]; %>

            <% sections.forEach(section => { %>
              <div class="col-md-6">
                <div class="card">
                  <div class="card-header d-flex justify-content-between align-items-center">
                    <strong><%= section.title %></strong>
                    <button class="btn btn-sm btn-dark" onclick="addItem('<%= section.field %>')">+ Add New</button>
                  </div>
                  <ul class="list-group list-group-flush" id="<%= section.field %>-list">
                    <% if (data[section.field]) { %>
                      <% data[section.field].forEach((item, index) => { %>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                          <span id="<%= section.field %>-name-<%= index %>"><%= item[section.field] %></span>
                          <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-secondary" 
                              onclick="editItem('<%= section.field %>', '<%= index %>', '<%= item._id %>')">
                              <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-outline-danger" 
                              onclick="deleteItem('<%= section.field %>', '<%= item._id %>')">
                              <i class="fas fa-trash"></i>
                            </button>
                          </div>
                        </li>
                      <% }) %>
                    <% } %>
                  </ul>
                </div>
              </div>
            <% }) %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function addItem(field) {
      const list = document.getElementById(`${field}-list`);
      const li = document.createElement('li');
      li.className = 'list-group-item d-flex justify-content-between align-items-center';
      li.innerHTML = `
        <input type="text" class="form-control me-2" placeholder="Enter ${field}" onkeydown="handleEnter(event, '${field}', this)">
        <div class="btn-group btn-group-sm">
          <button class="btn btn-success" onclick="saveNewItem('${field}', this)">✓</button>
          <button class="btn btn-danger" onclick="this.closest('li').remove()">×</button>
        </div>
      `;
      list.appendChild(li);
    }

    async function saveNewItem(field, btn) {
      const input = btn.closest('li').querySelector('input');
      const value = input.value.trim();
      if (!value) return alert('Cannot be empty');

      const res = await fetch(`/products/${field}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ value })
      });

      const data = await res.json();

      if (!res.ok) return alert(data.message || 'Failed to save');

      window.location.reload();
    }

    function editItem(field, index, id) {
      const span = document.getElementById(`${field}-name-${index}`);
      const current = span.innerText;

      span.outerHTML = `
        <input type="text" class="form-control me-2" id="${field}-input-${index}" 
               value="${current}" />
      `;

      const parent = document.getElementById(`${field}-input-${index}`).closest('li');
      const btnGroup = parent.querySelector('.btn-group');

      btnGroup.innerHTML = `

        <button class="btn btn-success" onclick="finalizeEdit('${field}', '${id}', '${index}')">
          ✓
        </button>
        <button class="btn btn-danger" onclick="cancelEdit('${field}', ${index}, '${current}', '${id}')">
          ×
        </button>
      `;
    }

    function cancelEdit(field, index, originalValue, id) {
      const input = document.getElementById(`${field}-input-${index}`);
      const parent = input.closest('li');

      input.outerHTML = `<span id="${field}-name-${index}">${originalValue}</span>`;

      const btnGroup = parent.querySelector('.btn-group');
      btnGroup.innerHTML = `
        <button class="btn btn-outline-secondary" onclick="editItem('${field}', ${index},${id})">
          <i class="fas fa-edit"></i>
        </button>
        <button class="btn btn-outline-danger" onclick="deleteItem('${field}', ${id})">
          <i class="fas fa-trash"></i>
        </button>
      `;
    }

    async function finalizeEdit(field, id, index) {
      const input = document.getElementById(`${field}-input-${index}`);

      const updated = input.value.trim();
      if (!updated) return alert('Cannot be empty');

      const res = await fetch(`/products/${field}/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ value: updated })
      });

       const data = await res.json();

      if (!res.ok) return alert(data.message || 'Failed to update');

      window.location.reload();
    }

    async function deleteItem(field, id) {
      if (!confirm('Are you sure?')) return;

      const res = await fetch(`/products/${field}/${id}`, {
        method: 'DELETE'
      });

      if (!res.ok) return alert(res.message || 'Failed to delete');
      window.location.reload();
    }

    function handleEnter(e, field, input) {
      if (e.key === 'Enter') {
        e.preventDefault();
        saveNewItem(field, input.closest('li').querySelector('.btn-success'));
      }
    }
  </script>
</body>
</html>
