<!-- Similar head and styling as add-product.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <!-- ... same head content ... -->
  <title>Edit Product</title>
</head>
<body>
<div class="container-fluid">
  <div class="row">
    <%- include('../partials/sidebar') %>
    <div class="col-md-10 p-4">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h4>Edit Product</h4>
        <div><%= name %> <i class="fa-solid fa-user ms-2"></i></div>
      </div>

      <form id="editProductForm" action="/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data">
        <!-- Basic product fields -->
        <div class="row mb-3">
          <div class="col-md-6">
            <label>Product Name</label>
            <input type="text" name="name" value="<%= product.name %>" class="form-control" required />
          </div>
          <div class="col-md-6">
            <label>Product ID</label>
            <input type="text" name="productId" value="<%= product.productId %>" class="form-control" required />
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label>Price ($)</label>
            <input type="number" name="price" step="0.01" value="<%= product.price %>" class="form-control" required />
          </div>
          <div class="col-md-6">
            <label>Discount (%)</label>
            <input type="number" name="discount" step="0.01" value="<%= product.discount %>" class="form-control" />
          </div>
        </div>

        <div class="mb-3">
          <label>Description</label>
          <textarea name="description" rows="3" class="form-control" required><%= product.description %></textarea>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label>Category</label>
            <select name="category" class="form-select" required>
              <% categories.forEach(cat => { %>
                <option value="<%= cat._id %>" <%= cat._id.toString() === product.category.toString() ? "selected" : "" %>><%= cat.category %></option>
              <% }) %>
            </select>
          </div>
          <div class="col-md-6">
            <label>Type</label>
            <select name="type" class="form-select" required>
              <% types.forEach(t => { %>
                <option value="<%= t._id %>" <%= t._id.toString() === product.type.toString() ? "selected" : "" %>><%= t.type %></option>
              <% }) %>
            </select>
          </div>
        </div>

        <!-- Variations -->
        <div class="mb-4">
          <label>Product Variations</label>
          <div id="variationsContainer"></div>
          <button type="button" class="btn btn-outline-primary mt-2" onclick="addVariation()">+ Add Variation</button>
        </div>

        <div class="d-flex justify-content-end gap-2">
          <a href="/admin/products" class="btn btn-outline-secondary">Cancel</a>
          <button type="submit" class="btn btn-dark">Update Product</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  let variationIndex = 0;
  const variationFiles = {};

  function populateExistingVariations() {
    <% product.variations.forEach((v, i) => { %>
      addVariation({
        index: <%= i %>,
        size: "<%= v.size %>",
        color: "<%= v.color %>",
        stock: <%= v.stock %>,
        images: <%- JSON.stringify(v.images || []) %>
      });
    <% }) %>
  }

  function addVariation(data = {}) {
    const index = data.index ?? variationIndex;
    const container = document.createElement('div');
    container.className = 'variation-box';
    container.dataset.index = index;

    container.innerHTML = `
      <span class="remove-btn" onclick="this.parentElement.remove()">&times;</span>
      <div class="row g-3 align-items-end">
        <div class="col-md-3">
          <label>Size</label>
          <select name="variations[${index}][size]" class="form-select" required>
            <option value="">Select</option>
            <% sizes.forEach(size => { %>
              <option value="<%= size._id %>" ${data.size === "<%= size._id %>" ? 'selected' : ''}><%= size.size %></option>
            <% }) %>
          </select>
        </div>
        <div class="col-md-3">
          <label>Color</label>
          <select name="variations[${index}][color]" class="form-select" required>
            <option value="">Select</option>
            <% colors.forEach(color => { %>
              <option value="<%= color._id %>" ${data.color === "<%= color._id %>" ? 'selected' : ''}><%= color.color %></option>
            <% }) %>
          </select>
        </div>
        <div class="col-md-2">
          <label>Stock</label>
          <input type="number" name="variations[${index}][stock]" class="form-control" value="${data.stock ?? 0}" required />
        </div>
        <div class="col-md-4">
          <label>Images</label>
          <button type="button" class="btn btn-outline-secondary w-100" onclick="triggerImageUpload(this)">+ Add Image</button>
          <input type="file" accept="image/*" style="display:none" multiple />
          <div class="image-preview mt-2">
            ${(data.images || []).map(url => `<img src="${url}" />`).join('')}
          </div>
        </div>
      </div>
    `;

    const fileInput = container.querySelector('input[type="file"]');
    const previewBox = container.querySelector('.image-preview');
    variationFiles[index] = [];

    fileInput.addEventListener('change', function () {
      const files = Array.from(this.files);
      variationFiles[index].push(...files);
      previewBox.innerHTML = '';
      variationFiles[index].forEach(file => {
        const reader = new FileReader();
        reader.onload = e => {
          const img = document.createElement('img');
          img.src = e.target.result;
          previewBox.appendChild(img);
        };
        reader.readAsDataURL(file);
      });
    });

    document.getElementById('variationsContainer').appendChild(container);
    variationIndex = Math.max(variationIndex, index + 1);
  }

  function triggerImageUpload(button) {
    button.nextElementSibling.click();
  }

  document.getElementById('editProductForm').addEventListener('submit', function (e) {
    const formData = new FormData(this);
    Object.entries(variationFiles).forEach(([index, files]) => {
      files.forEach(file => {
        formData.append(`variationImages_${index}[]`, file);
      });
    });

    fetch(this.action, {
      method: this.method,
      body: formData
    }).then(res => {
      if (res.redirected) window.location = res.url;
      else alert("Update failed");
    });

    e.preventDefault();
  });

  window.onload = populateExistingVariations;
</script>
</body>
</html>
