<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= product.name %> | ToughToes</title>
  <link rel="stylesheet" href="/css/productDetail.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
  <style>
    .main-img-container {
      position: relative;
      width: 100%;
      max-width: 500px;
    }

    .main-img {
      width: 100%;
    }

    .expand-btn {
      position: absolute;
      top: 10px;
      right: 10px;
      background: rgba(255, 255, 255, 0.8);
      border: none;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 20px;
    }

    .fullscreen-viewer {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.95);
      z-index: 9999;
      padding: 20px;
    }

    .fullscreen-viewer.active {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .fullscreen-main {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
    }

    .fullscreen-main img {
      max-height: 80vh;
      max-width: 90vw;
      object-fit: contain;
    }

    .fullscreen-thumbnails {
      height: 100px;
      display: flex;
      gap: 10px;
      justify-content: center;
      align-items: center;
      margin-top: 20px;
    }

    .fullscreen-thumbnails img {
      height: 80px;
      width: auto;
      cursor: pointer;
      opacity: 0.7;
      transition: opacity 0.3s;
    }

    .fullscreen-thumbnails img:hover,
    .fullscreen-thumbnails img.active {
      opacity: 1;
    }

    .close-fullscreen {
      position: absolute;
      top: 20px;
      right: 20px;
      background: none;
      border: none;
      color: white;
      font-size: 30px;
      cursor: pointer;
      z-index: 1001;
    }
  </style>
</head>
<body>
  <%- include('../partials/user-navbar', { name: name }) %>

  <main class="product-page">
    <div class="product-container">
      
      <div class="fullscreen-viewer">
        <button class="close-fullscreen" aria-label="Close fullscreen view">√ó</button>
        <div class="fullscreen-main">
          <img src="" alt="<%= product.name %>" />
        </div>
        <div class="fullscreen-thumbnails"></div>
      </div>

      <div class="product-images">
        <div class="main-img-container">
          <img src="<%= images && images.length ? images[0] : '/images/shoe_main.png' %>" alt="<%= product.name %>" class="main-img" />
          <button type="button" class="expand-btn" aria-label="View full screen">
            <i class="fas fa-expand"></i>
          </button>
        </div>
        <div class="thumbnails">
          <% if (images && images.length) { %>
            <% images.forEach(function(img) { %>
              <img src="<%= img %>" />
            <% }) %>
          <% } %>
        </div>
      </div>

      <div class="product-info">
        <h1><%= product.name %></h1>
        <p class="category"><%= product.product_category %> | <%= product.product_type %></p>
        <p class="price">Rs. <%= (product.price * (1 - (product.discount_percentage || 0) / 100)).toLocaleString() %></p>
        <% if (product.discount_percentage && product.discount_percentage > 0) { %>
          <span class="product-original-price">Rs. <%= product.price.toLocaleString() %></span>
          <span class="product-discount">(<%= Math.round(product.discount_percentage) %>% OFF)</span>
        <% } %>

        <div class="size">
          <p>Size</p>
          <div class="sizes">
            <% sizes.forEach(function(size, idx) { %>
              <button type="button" class="size-btn" data-size="<%= size %>" <%= idx === 0 ? 'aria-pressed="true"' : '' %>><%= size %></button>
            <% }) %>
          </div>
        </div>

        <div class="color">
          <p>Color</p>
          <div class="colors">
            <% if (colors && colors.length) { %>
              <% colors.forEach(function(color, idx) { %>
                <button type="button" class="color-btn" style="background-color: <%= color.hex || color %>; border: 1px solid #ccc; width: 32px; height: 32px; border-radius: 50%; margin-right: 8px; opacity: 1;" title="<%= color.name || color %>" data-color="<%= color.name || color %>" <%= idx === 0 ? 'aria-pressed="true"' : '' %>></button>
              <% }) %>
            <% } else { %>
              <span>No color options</span>
            <% } %>
          </div>
        </div>

        <div class="stock-info">
          <span id="stock-message"></span>
        </div>

        <div class="quantity">
          <p>Quantity</p>
          <div class="quantity-controls">
            <button type="button" id="qty-minus">-</button>
            <input type="text" id="qty-input" value="1" min="1" readonly style="width: 32px; text-align: center;" />
            <button type="button" id="qty-plus">+</button>
          </div>
        </div>

        <% if (typeof name === 'string' && name.trim().length > 0) { %>
          <button class="add-to-cart" id="addToCartBtn">üõí Add to Cart</button>
          <button class="add-to-wishlist" id="addToWishlistBtn">‚ô° Add to Wishlist</button>
        <% } %>

        <div class="features">
          <p>üöö Free shipping on orders over Rs. 1000</p>
          <p>‚Ü©Ô∏è 30-day return policy</p>
          <p>üõ°Ô∏è 1-year warranty</p>
        </div>
      </div>
    </div>

    <div class="description">
      <p><%= product.description %></p>
    </div>

    <div class="reviews">
      <h2>Recent Reviews</h2>
      <div class="review">
        <p><strong>John Doe</strong> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê - 3 days ago</p>
        <p>Excellent sound quality! This shoe is so good.</p>
      </div>
    </div>

    <div class="write-review">
      <h2>Write a Review</h2>
      <p><strong><%= product.name %></strong> ‚Äî <%= product.product_type %></p>
      <div class="rating">Rating: ‚≠ê‚≠ê‚≠ê‚≠ê‚òÜ (4/5)</div>
      <textarea placeholder="Tell us about your experience with this product..."></textarea>
      <button>Submit Review</button>
    </div>

    <div class="related-products">
      <h2>Related Products</h2>
      <div class="product-list-container" style="display: grid; grid-template-columns: repeat(5, 1fr); gap: 32px 24px;">
        <% if (relatedProducts && relatedProducts.length) { %>
          <% relatedProducts.forEach(function(product) { %>
            <a href="/products/<%= product._id %>" style="text-decoration:none;color:inherit;">
              <div class="product-card enhanced-card">
                <div class="product-image-wrapper">
                  <% if (product.image) { %>
                    <img src="<%= product.image %>" alt="<%= product.name %>" class="product-img-enhanced">
                  <% } else { %>
                    <img src="https://via.placeholder.com/200x150?text=<%= encodeURIComponent(product.name) %>" alt="<%= product.name %>" class="product-img-enhanced">
                  <% } %>
                </div>
                <div class="product-info-enhanced">
                  <div class="product-title"><%= product.name %></div>
                  <div class="product-meta"><%= product.product_type %></div>
                  <div class="product-price-row" style="align-items:center; gap:6px; flex-wrap:wrap;">
                    <% if (product.discount_percentage && product.discount_percentage > 0) { %>
                      <span class="product-price" style="font-size:0.98rem; font-weight:600;">Rs. <%= (product.price * (1 - product.discount_percentage / 100)).toLocaleString() %></span>
                      <span class="product-original-price" style="font-size:0.93rem;">Rs. <%= product.price.toLocaleString() %></span>
                      <span class="product-discount" style="font-size:0.93rem;">(<%= Math.round(product.discount_percentage) %>% OFF)</span>
                    <% } else { %>
                      <span class="product-price" style="font-size:0.98rem; font-weight:600;">Rs. <%= product.price.toLocaleString() %></span>
                    <% } %>
                  </div>
                </div>
              </div>
            </a>
          <% }) %>
        <% } else { %>
          <p>No related products found.</p>
        <% } %>
      </div>
    </div>
  </main>

  <footer>
    <div class="footer-columns">
      <div>
        <h4>ToughToes</h4>
        <p>Premium shoes for every step of your journey.</p>
      </div>
      <div>
        <h5>Quick Links</h5>
        <p>About Us</p>
        <p>Contact</p>
        <p>Size Guide</p>
        <p>Returns</p>
      </div>
      <div>
        <h5>Categories</h5>
        <p>Men's Shoes</p>
        <p>Women's Shoes</p>
        <p>Kids' Shoes</p>
        <p>Sale</p>
      </div>
      <div>
        <h5>Follow Us</h5>
        <i class="fab fa-facebook"></i>
        <i class="fab fa-instagram"></i>
        <i class="fab fa-twitter"></i>
      </div>
    </div>
    <p class="copyright">¬© 2025 ToughToes. All rights reserved.</p>
  </footer>

 <script>
  const sizeColorMap = JSON.parse('<%- JSON.stringify(sizeColorMap || {}) %>');
  const variations = JSON.parse('<%- JSON.stringify(variations || []) %>');

  document.addEventListener('DOMContentLoaded', function () {
    const mainImg = document.querySelector('.main-img');
    const thumbnails = document.querySelector('.thumbnails');
    const sizeBtns = document.querySelectorAll('.size-btn');
    const colorBtns = document.querySelectorAll('.color-btn');
    const stockMessage = document.getElementById('stock-message');

    
    document.querySelectorAll('.thumbnails img').forEach(thumb => {
      thumb.addEventListener('click', function () {
        mainImg.src = this.src;
      });
    });

    
    const fullscreenViewer = document.querySelector('.fullscreen-viewer');
    const fullscreenImage = fullscreenViewer.querySelector('.fullscreen-main img');
    const fullscreenThumbnails = fullscreenViewer.querySelector('.fullscreen-thumbnails');
    const expandBtn = document.querySelector('.expand-btn');
    const closeBtn = document.querySelector('.close-fullscreen');

    function openFullscreen(mainImageSrc, thumbnailSrcs) {
      fullscreenImage.src = mainImageSrc;
      fullscreenThumbnails.innerHTML = '';

      thumbnailSrcs.forEach((src, index) => {
        const thumb = document.createElement('img');
        thumb.src = src;
        thumb.alt = 'Thumbnail ' + (index + 1);
        thumb.classList.toggle('active', src === mainImageSrc);

        thumb.addEventListener('click', () => {
          fullscreenImage.src = src;
          fullscreenThumbnails.querySelectorAll('img').forEach(img => {
            img.classList.remove('active');
          });
          thumb.classList.add('active');
        });

        fullscreenThumbnails.appendChild(thumb);
      });

      fullscreenViewer.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeFullscreen() {
      fullscreenViewer.classList.remove('active');
      document.body.style.overflow = '';
    }

    expandBtn.addEventListener('click', () => {
      const mainImageSrc = mainImg.src;
      const thumbImages = Array.from(document.querySelectorAll('.thumbnails img')).map(img => img.src);
      const allImages = [mainImageSrc, ...thumbImages.filter(src => src !== mainImageSrc)];
      openFullscreen(mainImageSrc, allImages);
    });

    closeBtn.addEventListener('click', closeFullscreen);

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && fullscreenViewer.classList.contains('active')) {
        closeFullscreen();
      }
    });

    fullscreenViewer.addEventListener('click', (e) => {
      if (e.target === fullscreenViewer) {
        closeFullscreen();
      }
    });

    
    function updateColorAvailability(selectedSize) {
      const colorDataList = sizeColorMap[selectedSize] || [];

      colorBtns.forEach(cb => {
        const colorVal = cb.dataset.color;
        const found = colorDataList.find(c => c.color === colorVal);
        if (found) {
          cb.classList.remove('unavailable');
          cb.style.opacity = '1';
          cb.style.cursor = 'pointer';
        } else {
          cb.classList.add('unavailable');
          cb.classList.remove('selected');
          cb.style.opacity = '0.4';
          cb.style.cursor = 'not-allowed';
        }
      });

      const selected = document.querySelector('.color-btn.selected');
      if (selected && selected.classList.contains('unavailable')) {
        selected.classList.remove('selected');
      }

      updateStockMessage();
    }

    function updateStockMessage() {
      const selectedSize = document.querySelector('.size-btn.selected')?.dataset.size;
      const selectedColor = document.querySelector('.color-btn.selected')?.dataset.color;
      if (!selectedSize || !selectedColor) {
        stockMessage.textContent = '';
        return;
      }

      const match = variations.find(v => v.product_size == selectedSize && v.product_color == selectedColor);
      if (!match) {
        stockMessage.textContent = 'Sold out';
        stockMessage.style.color = 'red';
        return;
      }

      const stock = match.stock_quantity;
      if (stock === 0) {
        stockMessage.textContent = 'Sold out';
        stockMessage.style.color = 'red';
      } else if (stock < 10) {
        stockMessage.textContent = `Few stocks left (${stock})`;
        stockMessage.style.color = 'orange';
      } else {
        stockMessage.textContent = `In stock (${stock})`;
        stockMessage.style.color = 'green';
      }
    }

    sizeBtns.forEach(btn => {
      btn.addEventListener('click', function () {
        sizeBtns.forEach(b => b.classList.remove('selected'));
        this.classList.add('selected');

        updateColorAvailability(this.dataset.size);

        const colorList = sizeColorMap[this.dataset.size] || [];
        if (colorList.length > 0) {
          const firstColor = colorList[0].color;
          const firstBtn = [...colorBtns].find(cb => cb.dataset.color === firstColor);
          if (firstBtn) {
            colorBtns.forEach(b => b.classList.remove('selected'));
            firstBtn.classList.add('selected');
            firstBtn.click();
          }
        }
      });
    });

    colorBtns.forEach(btn => {
      btn.addEventListener('click', function () {
        if (btn.classList.contains('unavailable')) return;
        colorBtns.forEach(b => b.classList.remove('selected'));
        this.classList.add('selected');

        const selectedSize = document.querySelector('.size-btn.selected')?.dataset.size;
        const selectedColor = this.dataset.color;
        const colorList = sizeColorMap[selectedSize] || [];
        const colorEntry = colorList.find(c => c.color === selectedColor);

        if (colorEntry?.images?.length) {
          mainImg.src = colorEntry.images[0];
          thumbnails.innerHTML = '';
          colorEntry.images.slice(0).forEach(url => {
            const img = document.createElement('img');
            img.src = url;
            img.addEventListener('click', () => mainImg.src = url);
            thumbnails.appendChild(img);
          });
        }

        updateStockMessage();
      });
    });

    
    const qtyInput = document.getElementById('qty-input');
    document.getElementById('qty-minus').onclick = () => {
      const val = parseInt(qtyInput.value);
      if (val > 1) qtyInput.value = val - 1;
    };
    document.getElementById('qty-plus').onclick = () => {
      const val = parseInt(qtyInput.value);
      qtyInput.value = val + 1;
    };

    
    document.getElementById('addToCartBtn').onclick = function () {
      const selectedSize = document.querySelector('.size-btn.selected')?.dataset.size;
      const selectedColor = document.querySelector('.color-btn.selected')?.dataset.color;
      const quantity = parseInt(qtyInput.value, 10);
      if (!selectedSize) {
        alert('Please select a size.');
        return;
      }
      if (!selectedColor) {
        alert('Please select a color.');
        return;
      }
      const match = variations.find(v => v.product_size == selectedSize && v.product_color == selectedColor);
      if (!match) {
        alert('Selected variation is not available.');
        return;
      }
      if (quantity > match.stock_quantity) {
        alert('Quantity exceeds available stock.');
        return;
      }
      // Send AJAX to backend to add to cart and update stock
      fetch('/cart/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          product_variation_id: match._id,
          quantity: quantity
        })
      })
      .then(async res => {
        let data;
        try {
          data = await res.json();
        } catch (e) {
          alert('Could not add to cart. (Invalid response)');
          console.error('Add to cart response error:', e);
          return;
        }
        if (data.success) {
          alert('Added to cart!');
          match.stock_quantity -= quantity;
          updateStockMessage();
        } else {
          alert(data.message || 'Could not add to cart.');
          console.error('Add to cart error:', data);
        }
      })
      .catch(err => {
        alert('Could not add to cart. (Network error)');
        console.error('Add to cart network error:', err);
      });
    };

    // Add to Wishlist AJAX
    const addToWishlistBtn = document.getElementById('addToWishlistBtn');
    if (addToWishlistBtn) {
      addToWishlistBtn.onclick = function() {
        fetch('/wishlist/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({ productId: '<%= product._id %>' })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            alert(data.message || 'Added to wishlist!');
          } else {
            alert(data.message || 'Could not add to wishlist.');
          }
        })
        .catch(() => alert('Could not add to wishlist.'));
      };
    }
  </script>
    // ‚úÖ Auto-select first size on load
    const firstSizeBtn = document.querySelector('.size-btn');
    if (firstSizeBtn) firstSizeBtn.click();
  });
</script>

</body>
</html>
